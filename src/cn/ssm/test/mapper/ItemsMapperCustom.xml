<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.ssm.test.mapper.ItemsMapperCustom" >
	<!-- 商品列表查询 -->
	<!-- 建议:paramterType传入一个包装对象 （包装了查询条件）
		resultType建议使用扩展对象-->
	<select id="findItemsList" parameterType="cn.ssm.test.po.ItemsQueryVo" 
			resultType="cn.ssm.test.po.ItemsCustom" >
		SELECT items1.* FROM items1
		<where>
			<include refid="query_items_where"></include>
		</where>
	</select>
	
	<!-- 定义商品查询条件 -->
	<sql id="query_items_where">
	<!-- 使用动态sql，进行if判断，满足条件进行sql拼接 -->
	<!-- 商品的查询条件通过 ItemsQueryVo包装对象中的itemsCustom属性传递-->
		<if test="itemsCustom!=null">
			<if test="itemsCustom.name!=null and  itemsCustom.name !=''">
				items.name LIKE '%${itemsCustom.name}%'
			</if>
		</if>
	</sql>
	
	<!-- 参数为数组进行批量删除 -->
	<delete id="deleteItemsQuery" parameterType="java.lang.String">
		DELETE FROM items1 where name in 
		<foreach item="names" collection="array" open="(" separator="," close=")">
			#{names}
		</foreach>
	</delete>
	
	<insert id="insert" parameterType="cn.ssm.test.po.Items" >
    	insert into items1 (id, name, price,pic, createtime, detail)
    		values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{price,jdbcType=REAL}, 
     		#{pic,jdbcType=VARCHAR}, #{createtime,jdbcType=TIMESTAMP}, #{detail,jdbcType=LONGVARCHAR})
  </insert>
</mapper>